#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
//#include<stdio.h>
//int main()
//{
	//int num1 = 0;
	//int num2 = 0;
	//scanf("%d %d", &num1, &num2);
	//int sum = num1 + num2;
	//printf("%d\n", sum);
	//return 0;
//}

//int main()
//{
	//printf("%d\n", strlen("abcdefg"));
	//return 0;
//}
//int main()
//{
	//printf("1\n");
	//printf("111\n");
	//printf("11111\n");
	//printf("1111111\n");
//}
//int main()
//{
	//int c1=97, c2=98;
	//printf("%c%c\n", c1, c2);
//}
//int main()
//{
	//int a, b, c, d;
	//unsigned u, v;
	//a = 1, b = 3, c = 6, d = -7;
	//u = a + b;
	//v = c + d;
	//printf("u=%d,v=%u\n", u, v);
//}
//int main()
//{
	//int a = 4, b = 7;
	//printf("%d\n", (a = a + 1, b + a, b + 1));
//}
//int main()
//{
	///int a = 4, b = 7;
	//printf("%d\n", a = a + 1, b + a, b + 1);
//}
//int main()
//{
	//int a = 10;
	//a += a -= a *= a;
	//printf("a=%d\n", a);
//}
//int main()
//{
	//int x, y, z, t;
	//x = y = z = 1;
	//t = --x || --y && --z;
	//printf("x=%dy=%dz=%dt=%d\n", x, y, z, t);
//}
//int main()
//{
//   int m = 7, n = 4    
//   float a = 38.4, b = 6.4, x;
//   x=m / 2 + n * a / b + 1 / 2;
//   printf("%f\n", x);
//}
//int main()
//{
	//printf("120");
//}
//int main()
//{
	//printf("\a");
//}
//int main()
//{
	//printf("%d\n", sizeof("c:\test\628\test.c"));
//}



//int main()
//{
	//char arr[] = "hello bite!";
	//int ret = sizeof(arr);

	//printf("%d\n", ret);
	//return 0;
//}
/*int main()
{
	int input = 0;
	printf("加入时代少年团\n");
	printf("要好好学习吗（1or0）？");
		scanf("%d", &input);
	if (input == 1)
	{
		printf("奖励一个好offer");
	}
	else
	{
		printf("奖励一个大嘴巴子");
	}
}
*/
/*int main()
{
	int 手艺 = 0;
	printf("加入手艺群\n");
	while (手艺< 20000000000000000)
	{
		printf("疯狂手艺:%d\n", 手艺);
		手艺++;
	}
	if (手艺 >= 2000000000000000)
	{
		printf("我嘞个超级手艺王\n");
	}
	else
	{
		printf("继续加油\n");
	}
	return 0;
}*/
//int faker(int x, int y)
//{
	//int z = 0;
	//z = x + y;
//	return z;
//}
/*int faker(int x, int y)
{
	return(x + y);
}
int main()
{
	printf("王子公主请输入两个数字");
	int num1 = 0;
	int num2 = 0;
	scanf("%d %d", &num1,&num2);
	//int sum = num1 + num2;
	int sum = faker(num1,num2);
	printf("亲爱的王子公主，加起来一共是%d\n", sum);
	return 0;
}*/
/*int main()
{
	char ch[10] = { "我","艾","谭","程","文","我","真","得","很","爱"};
	int i = 0;
	while (i < 10)
	{
		printf("%s\n", ch[i]);
		i = i + 1;
	}
	return 0;
}*/
//int main()
//{
	//int flag = 0;
	//if (!flag)                                 !的含义
	//{
		//printf("woleigechaojishouyiwang\n");
	//}
//}
//int main()
//{
	//int a = 10;
	//int b = -a;
//	printf(" %d\n", b);
//}
//int main()
//{
	//int arr[20] = { 0 };
	//printf("%d\n", sizeof arr/sizeof arr[0]);              区分sizeof和strlen sizeof是单目操作符不是函数
//}
//int main()
//{
	//int a = 10;                  先用再加
	//int b = a++;
	//printf("%d\n",b);
	//printf("%d\n",a);
//}
//int main()
//{
	//int a = 0;
	//int b = 667;
	//if (a || b)//                    或逻辑
	//{
		//printf("我嘞个超级手艺王");
	//}
	//if (a && b)                      并且逻辑
	//{
		//printf("我嘞个超级手艺王");
	//}
//}
//int main()
//{
	//int a = 40;
	//int b = 30;
	//int chh = a > b ? a : b;              条件操作符？：
	//printf("%d\n", chh);
//}
//int main()
//{
	//int a = 10086;
	//int b = 2006;
	//int c = 616;
	//int d = 0;
	//int e = 0;
	//printf("%d\n",d=a+b+c,e=a+b+c+d, e);              逗号表达式，左边必须为可以修改的值，计算结果是最后一个表达式
//}
//int main()
//{
//	int a, b, c;
//	printf("Please input a,b:");
//	scanf("%d %d", &a,&b);
//	c = a + b;
//	printf("%d\n", c);
//}
//int main()
//{
//	float a, b, c, average;
//	printf("Please input a b c:");
//	scanf("%f%f%f", &a, &b, &c);
//	average = (a + b + c) / 3;
//	printf("The average value is:%f\n", average);
//}
//int main()
//{
	//float a, b, c, d;
	//printf("请王子公主输入三个数字好吧");
	//scanf("%f%f%f", &a, &b, &c);                          scanf表达式中%?不需要用逗号隔开，同时要使用&
	//d = (a + b + c) / 3;
	//printf("%f\n", d);
//}
//int main()
//{
//	int a = 10, x = 5, y = 6;
//	a += a *= 6;                                          //注意运算符的含义和运算顺序
//	x = y++;
//	y = ++x;
//	a = x++ + y;
//	printf("%d,%d,%d\n", a, x, y);
//}
//int main()
//{
//	int a = 5, b = 7;
//	float x = 67.8564, y = -789.124;
//	char c = 'A';
//	printf("%3d%3d\n", a, b);
//	printf("%10f,%-10f\n", x, y);
//	printf(" %8.2f, %4f, %e, %10.2e\n", x, y, x, y);           //浮点数格式: 默认情况下，浮点数在输出时会显示6位小数。%10.2  10表示至少的总宽度，.2表示保留两位小数。负表示负数，不负负得正。
//	printf("%c,%d,%o,%x\n", c, c, c, c);
//}
//#define ADD(x,y) ((x)+(y))                      宏
//int ADD(int x, int y)                            函数
//{
	//return x + y;
//}
//int main()
//{
	//int a = 10, b = 20, c = 30;
	//int d = ADD(a, c);
	//printf("%d\n", d);
//}
//#include<math.h>
//#define pi 3.1415926
//int main()
//{
	//long d;
	//double x;
	//scanf("%ld", &d);                                          为什么加入\n后要输入两个参数 %ld表示长整型数（long int)
	//x = 1.0 / 2 * sin(d * pi / 180.0);
	//printf("x=%f\n", x);
//}
/*#include<math.h>
int main()
{
	double a, x,y;
	printf("Please give me two numbers:");
	scanf("%lf %lf", &a, &x);
	y = sin(sqrt(a+x))+log(a*x);
	printf("%lf\n", y);
	return 0;
}*/
//int main()
//{
	//int number = 0;
	//printf("请小朋友随便输入一个数字:");           奇数问题
	//scanf("%d", &number);
	//if (number % 2 == 0)
		//printf("偶数啦小伙子");
	//else
		//printf("奇数啦小伙子");
	//return 0;
//}
//int main()
//{
	//double F, c;
	//scanf("%lf", &F);                                  %lf用来表示double类型的浮点数  printf会默认将float类型提升为double类型，因此在printf中可以用%f简便表示%lf
	//c =(F-32)*5/9;                                 C语言会将没有后缀的浮点常量默认为double类型，变成float类型需要在后面声明，如float num = 98.6f；
	//printf("F=%2.1lf\nc=%2.1lf\n", F, c);              %2.1意味着总宽度至少为2，若是少于2则会在前面添加空格，.1表示保留一位小数
//}
//#define PRICE 30
//int main()
//{
	//int x = 5;
	//PRICE = PRICE * x;
	//printf("%d%d", x, PRICE);                             该程序无法运行，因为PRICE已经被define关键字声明为常量，故值无法再次修改
//}
//int main()
//{
	//int a, b, t;
	//scanf("%d %d", &a, &b);                                   数字互换
	//t = a;
	//a = b;
	//b = t;
	//printf("a=%d b=%d", a, b);
//}
/*#include<math.h>
int main()
{
	//double a, b, c,d,x,e;
	//printf("请输入一个底数:");
	//scanf("%lf", &a);
	//printf("请输入指数:");
	//scanf("%lf",&b);
	//c = pow(a, b);                                   通用计算任意底数的指数
	//printf("请输入x的参数");
	//scanf("%lf", &x);
	//d = cos(sqrt(a + x));
	//e = c + d;
	//printf("%lf", e);


    
	double a,x,y;
	printf("请输入两个数字");
	scanf("%lf%lf", &a, &x);                             计算e为底的指数
	y = cos(sqrt(a + x)) + exp(a * x);                
	printf("%lf", y);
}*/
/*#include<math.h>
int main()
{
	double a, b, c,s,d;
	scanf("%lf%lf%lf", &a, &b, &c);
	s = (a + b + c) / 2;
	d = sqrt(s * (s - a) * (s - b) * (s - c));
	printf("%lf", d);

}*/
/*int main()
{
	if (a == 0)
		if (b == 0)
			prinf("error\n");
		else a++;
}*/
//#include <stdio.h>
//int main()
//{
	//char ch1 = 'a', ch2 = 'b', ch3 = 'c', ch4 = '\101', ch5 = '\116';     注意\t和\b的作用
	//printf("a%cb%c\tab%c\n", ch1, ch2, ch3);
	//printf("\t%c %c", ch4, ch5);
//}
//int main()
//{
	//int i, n = 0;
	//for (i = 1; i <= 5; i++)
	//	n += i;
	//printf("%d\n", n);
//}
//int Swap(int* px, int* py)             //改变实际参数要传递地址
//{
	//int z = 0;
//	z = *px;
//	*px = *py;                        //去掉*号只是改变门牌号，不改变房间里面的东西
//	*py = z;
//}
//int ADD(int x, int y)
//{
//	int z = 0;
//	z = x + y;
//	return z;
//}
//int main()
//{
//	int a = 0;
//	int b = 0;
//	scanf("%d%d", &a, &b);
//	int c = a + b;
//	printf90 ("相加等于:%d\n", c);
//	printf("交换前:a=%d b=%d\n", a, b);
//	Swap(&a, &b);
//	printf("交换后:a=%d b=%d\n", a, b);
//}
/*int main()
{
	printf("%d", strlen("abcdef"));
	printf("%d", printf("%d", strlen("abcdef")));//链式访问 注意661是如何得到的
}
int main(void)//明确说明main函数不需要参数*/
//int main()
//{
//	int x = 1, a = 0, b = 0;
//	switch (x)
//	{
//	   case 1:a++;
//	   case 2:a++; b++;
//	}
//	printf("a=%d,b=%d\n",a,b);
//}
//int main()
//{
//	int i;
//	scanf("%d", &i);
//	switch (i)
//	{
//	case 1:
//	case 2:putchar('i');
//	case 3:printf("%d\n", i); break;
//	default:printf("OK!\n");
//	}
//}
//int main()
//{
//	int year, r4, r100, r400;
//	printf("输入一个年份:\n");
//	scanf("%d", &year);
//	r4 = year % 4;
//	r100 = year % 100;
//	r400 = year % 400;
//	if ((r4 == 0 && r100 != 0) || r400 == 0)
//		printf("%d是闰年\n", year);
//	else
//		printf("%d不是闰年\n", year);
//}
//int main()
//{
//	int a, b, c,t;
//	scanf("%d,%d,%d", &a, &b, &c);             有问题的程序
//	if(a<b)
//	{t = a; a = b; b = t;}
//	if (a<c)
//	{t = a; a = c; c = t;}
//	if (b<c)
//	{t = b; b = c; c = t;}
//	printf("%d,%d,%d", a, b, c);
//}
//int main()
//{
//	double x;
//	scanf("%lf", &x);
//	if (x < 1)
//	{
//	printf("%lf", x);
//    }
//	else if (x>=1 && x < 10)           
//    {
//		printf("%lf", 3 - x / 5);
//	}
//    else if (x >= 10)
//	{
//	printf("%lf", 3*x-11);
//    }
//}
//#include <math.h>
//int main()
//{
//	float a ,b,c,s,d;
//	scanf(" %f %f %f", &a, &b, &c);
//	if (a + b > c && a + c > b && b + c > a)
//	{
//		s = (a + b + c) / 3;
//		d = sqrt(s * (s - a) * (s - b) * (s - c));
//		printf("%f", d);
//	}
//	else
//	{
//		printf("sorry man");
//	}
//}
//#include<math.h>
//float main()
//{
//	float a, b, c, d, e;
//	printf("请输入三角形的三条边长:");
//	scanf("%f %f %f",&a,&b,&c);
//	if (a + b > c && a + c > b && b + c > a)
//	{
//		d = (a + b + c) / 2;
//		e = sqrt(d * (d - a) * (d - b) * (d - c));
//		printf("三角形面积为:%f", e);
//	}
//	else
//	{
//		printf("What a pity the number is wrong");
//	}
//}
//int main()
//{
//	int a, b, c;
//	printf("请输入年月日:");
//	scanf("%d%d%d", &a, &b, &c);
//	if (a % 4 == 0 && a % 100 != 0 || a % 400 == 0)       //闰年
//	{
//		switch (b)
//		{
//		case 1:printf("这一天是该年的第%d天", c); break;
//		case 2:printf("这一天是该年的第%d天", 31 + c); break;
//		case 3:printf("这一天是该年的第%d天", 60 + c); break;
//		case 4:printf("这一天是该年的第%d天", 91 + c); break;
//		case 5:printf("这一天是该年的第%d天", 121 + c); break;
//		case 6:printf("这一天是该年的第%d天", 152 + c); break;
//		case 7:printf("这一天是该年的第%d天", 182 + c); break;
//		case 8:printf("这一天是该年的第%d天", 213 + c); break;
//		case 9:printf("这一天是该年的第%d天", 244 + c); break;
//		case 10:printf("这一天是该年的第%d天", 274 + c); break;
//		case 11:printf("这一天是该年的第%d天", 305 + c); break;
//		case 12:printf("这一天是该年的第%d天", 335 + c); break;
//		}
//	}
//	else
//	{
//		switch (b)
//		{
//		case 1:printf("这一天是该年的第%d天", c); break;
//		case 2:printf("这一天是该年的第%d天", 31 + c); break;
//		case 3:printf("这一天是该年的第%d天", 59 + c); break;
//		case 4:printf("这一天是该年的第%d天", 90 + c); break;
//		case 5:printf("这一天是该年的第%d天", 120 + c); break;
//		case 6:printf("这一天是该年的第%d天", 151 + c); break;
//		case 7:printf("这一天是该年的第%d天", 181 + c); break;
//		case 8:printf("这一天是该年的第%d天", 212 + c); break;
//		case 9:printf("这一天是该年的第%d天", 243 + c); break;
//		case 10:printf("这一天是该年的第%d天", 273 + c); break;
//		case 11:printf("这一天是该年的第%d天", 304 + c); break;
//		case 12:printf("这一天是该年的第%d天", 334 + c); break;
//		}
//	}
//
//#include<math.h>
//int main()
//{
//	double a, b, c;
//	printf("请输入任意三个数字:");
//	scanf("%lf%lf%lf",&a,&b,&c);
//	if (b * b - 4 * a * c > 0)
//	{
//		printf("恭喜你有两个解\n");
//		printf("x1=(-b+sqrt(b*b-4*a*c))/2*a,x2=(-b-sqrt(b*b-4*a*c))/2*a");
//	}
//	else if (b * b - 4 * a * c == 0)
//	{
//		printf("恭喜你有一个x\n");
//		printf("x=(-b±sqrt(b*b-4*a*c))/2*a");
//	}
//	else if (b * b - 4 * a * c != 0)
//	{
//		printf("恭喜你中奖了，没有x");
//	}
//}
//int main()
//{
//	int a = 0, b = 0, c = 0;
//	printf("请输入三个数字(百位，十位，个位):");
//	scanf("%d%d%d", &a, &b, &c);
//	int d;
//	d = 100 * a + 10 * b + c;
//	if (a * a * a + b * b * b + c * c * c == d)
//	{
//		printf("可爱的你，找到水仙花数啦!");
//	}
//	else
//	{
//		printf("没关系的，我们一起去找找其他数字吧!");
//	}
//}
//#include<math.h>
//int main()
//{
//	int a, b, c;
//	printf("请输入年月日:");
//	scanf("%d%d%d", &a, &b, &c);
//	if (b == 1)
//	{
//		printf("%d天", c);
//	}
//	else if (b == 2)
//	{
//		printf("&d天", 31 + c);
//	}
//	else if (b > 2 && b<=7)
//	{
//		printf("%lf天", 60 + (b - 1) / 2 * 31 + ceil(b - 3) / 2*30);
//	}
//	else if(b>7&&b<=12)
//	{
//		printf("%lf天", 213 + (b - 6) / 2 * 31 + ceil(b - 8) / 2*30);
//	}
//}                       
//                                                     需要调试的if
//#include<math.h>
//int main()
//{
//	int i = 2, n = 0,sum=1;
//	double sum, a,x=0,c;
//	printf("请输入一个X值:");
//	scanf("%lf", x);
//	while (fabs(a) >= 1e-5)
//	{
//		a = pow(x, i) * i * (i - 1) * pow(-1, n);
//		c+=pow(x,i)/sum
//		sum += a;
//		i = i + 2;
//		n = n + 1;
//	}
//
//  }
//void print(unsigned int n)
//{
//	if (n > 9)
//	{
//		print(n/10);
//	}
//	printf("%d ", n % 10);
//}
//int main()
//{
//	unsigned int num = 0;
//	scanf("%u", &num);
//	print(num);
//}

//int mystrlen(char* str)
//{
//	int count = 0;
//    while (*str != '\0')
//    {
//		count++;
//		str++;
//	}
//	return count;
//}
//int mystrlen(char* str)
//{
//	if (*str != '\0')
//	{
//		return 1 + mystrlen(str + 1);
//	}
//	else
//		return 0;
//}
//int main()
//{
//	char arr[] = "abc";
//	int len = mystrlen(arr);
//	printf("%d\n", len);
//	return 0;
//}
//int fac(int n)
//{
//	if (n <= 1)
//		return 1;
//	else
//		return n * fac(n - 1);                          递归实现
//}
//int fac(int n)
//{
//	int i = 1;
//	int ret = 1;
//	for (i = 1; i <= n; i++)                           迭代实现
//	{
//		ret *= i;
//	}
//	return ret;
//}
//int main()
//{
//	int n = 0;
//	scanf("%d", &n);
//	int ret = fac(n);
//	printf("%d\n", ret);
//}
//int Fib(int n)
//{
//	if(n<=2)
//		return 1;
//	else
//		return Fib(n - 1) + Fib(n - 2);
//}
//int main()
//{
//	int n = 0;
//	scanf("%d", &n);
//	int b = Fib(n);
//	printf("%d", b);
//
//int main()
//{
//	int a=0, b=0, c;
//	printf("请输入两个数字:");
//	scanf("%d%d", &a,&b);
//	c = a + b;
//	printf("%d", c);
//
//}
//int mystrlen(char* str)
//{
//	int count = 0;
//	while (*str != '\0')           循环写法
//	{
//		count++;
//		str++;
//	}
//	return count;
//}
//int mystrlen(char* str)
//{
//	char* start = str;//令一个指针等于初始地址
//	while (*str != '\0')        
//	{
//		str++;
//	}
//	return(str - start);                        指针减指针
//}
//int main()
//{
//	int len = mystrlen("abcdef");
//	printf("%d\n", len);
//	return 0;
//}
//#define N 5
//int values[N]
//int *vp
//int main()
//{
	/*for (vp = &values[N]; vp > values[0];)
	{
		*--vp = 0;
	}*/
	/*for (vp = &values[N - 1]; vp >= values[0]; vp--)
	{
		*vp = 0;
	}*/                                                          //不建议用第二种写法，指针可以往后越界，但是不能往前越界（有些编译器不能运行）
//}
//int main()
//{
//	int arr[10] = { 0 };
//	//arr是首元素的地址
//	//&arr[0]
//	int* p = arr;
//	//数组可以通过指针来访问
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	int i = 0;
//	/*for (i = 0; i < sz; i++)
//	{
//		printf("%d\n", *(p + i));
//	}
//	return 0;*/
//	for (i = 0; i < sz; i++)
//	{
//		printf(" % p---- % p\n", &arr[i], p + i);                     p=arr
//	}
//}                         
                                        //比较printf("%d",arr[i])和printf("%d",*p+i)
//int F(int n)
//{
//	int a = 0;
//	if (n == 0 || n == 1)
//	{
//		a = 1;
//	}
//	else if (n == 2)
//	{
//		a = 0;
//	}
//	else
//	{
//		a = F(n - 1) - 3*F(n - 2) + 2*F(n - 3);
//	}
//	return a;
//}
//int main()
//{
//	int M = 0, m = 0,b=0,i=0;
//	for (i = 0; i <= 10; i++)
//	{
//		if (M < F(i))
//		{
//			M = F(i);
//		}
//		if (m > F(i))
//		{
//			m = F(i);
//		}
//		if (0 == F(i))
//		{
//			b++;
//		}
//	}
//	printf("F(0)到F(10)中的最大值和最小值分别为:%d %d\n0的个数为:%d", M, m, b);
//}
//
//int main() {
//	int a, b;
//	while (scanf("%d %d", &a, &b) != EOF) 
//	{ 
//		printf("%d\n", a + b);
//	}
//	return 0;
//}
//int main()
//{
//	int a = 0;
//	float b, c, d;
//	scanf("%d%f%f%f", &a, &b, &c, &d);
//	printf("The each subject score of No.%d is %.2f,%.2f,%.2f.", a, b, c, d);
//}
//#include<windows.h>
//int main()
//{
//	int ch;
//	ch = getchar();
//	putchar(' =' );
//	putchar(ch);
//	putchar('\n');
//	system("pause");
//}
//int main()
//{
//	char a;
//	scanf("%c", &a);//输入一个任意字符
//	int i = 1;//记行数用的
//	int j, g; //j是输出“空格”用的，g是输出“字符+空格”用的
//	for (i = 1; i < 6; i++)//关于行数i在前5行执行的循环（包括第5行）
//	{
//		for (j = 5 - i; j > 0; j--)//输出第n行的前5-n个空格（n<=5）
//		{
//			printf(" ");
//		}
//		for (g = 0; g < i; g++)//输出第n行的所有空格后的字符
//		{
//			printf("%c ", a);//注意所输出的%c后有一个空格
//		}
//		printf("\n");//第n行输出结束，执行换行操作
//	}//运行到这里就输出了n行的字符金字塔图形
//	return 0;
//
//int main()
//{
//	int a, b;
//	scanf("%d%d", &a, &b);
//	a = b, b = a;
//	printf("a=%d,b=%d", a, b);
//
 /*int main()
{
	int a, b, c, d;
	scanf("%d%d%d%d", &a, &b, &c, &d);
	printf("%d%d%d%d", d, c, b, a);
}*/
//int main()
//{
//	unsigned int a, b, c, d;
//	scanf("%d%d", &a, &b);
//	c = (a + b) % 1000 % 100;
//	d = (a + b) % 100;
//	if (a + b > 1000)
//	{
//		printf("%d", c);
//	}
//	if (1000 > a + b && a + b >= 100)
//	{
//		printf("%d", d);
//	}
//	else
//	{
//		printf("%d", a + b);
//	}
//
// int main() 
//{
//	int a, b, c;
//	scanf("%f", &a);
//	b = a % 10;
//	c = b / 1;
//	printf("%d", c);
//}
//int main()
//{
//	int a;
//	scanf("%d", &a);
//	printf("%d", a * 3156 * 10000);
//
//int f(int n)
//{
//	int k = 1;
//	do
//	{
//		k *= n % 10;
//		n /= 10;
//	} while (n);
//	return k;
//}
//int main()
//{
//	int n = 26;
//	printf("%d\n", f(n));
//
//}
//int fun(int a, int b)
//{
//	int c;
//	c = a + b;
//	return c;
//}
//int main()
//{
//	int x = 6, y = 7, z = 8, r;
//	r = fun(x + y, z--);
//	printf("%d\n", r); 
//}
//static int x = 20;
//int f1(int x)
//{
//	x += 10;
//	printf("%d...f1()\n", x);
//}
//int f2()
//{
//	x += 10;
//	printf("%d...f2()\n", x);
//}
//int main()
//{
//	int x = 10;
//	f1(x);
//	f2();
//	printf("%d...main()\n", x);
// }
//int main()
//{
//	int p(int x, int n);
//	int x = 2, n = 4;
//	printf("p=%d\n", p(x, n));
//}
//int p(int x, int n)
//{
//	int i,f = 1;
//	for (i = 1; i <= n; i++)f = f * x;
//	return f;
//}
//int f(int j);
//int main()
//{
//	int i;
//	for (i = 1; i < 4; i++)
//		f(i);
//}
//int f(int j)
//{
//	static int a = 10;
//	int b = 1;
//	b++;
//	printf("%d+%d+%d=%d\n", a, b, j, a + b + j);
//	a += 10;
//}
//long s, i;
//int main()
//{
//	long s = 0, i;
//	for (i = 1; i < 11; i++)
//	{
//		s = s + m(i);
//	}
//	printf("%ld\n", s);
//}
//long m(int k)
//{
//	long t = 1, j;
//	for (j = 1; j <= k; j++)
//		t = t * j;
//	return t;
//
//}
//int main(void)
//{
//	int ch = 0;
//	while ((ch = getchar()) != EOF)
//	{
//		if (ch != 10)
//		{
//			putchar(ch + 32);
//			printf("\n");
//		}
//	}
//	return 0;
//}

//int main()
//{
//	int n, h, m;
//	scanf("%d%d%d", &n, &h, &m);
//	while ((scanf("%d %d %d", &n, &h, &m)) != EOF)
//	{
//		if (m%h > 0)
//		{
//			printf("%d", n - (m/h) - 1);
//		}
//		else if (m%h == 0)
//		{
//			printf("%d", n - m/h);
//		}
//	}
//	return 0;
// }
//int main()
//{
//	float height, weight, bmi;
//	scanf("%f %f", &weight, &height);
//	bmi = weight / (height * height);
//	if (bmi >= 18.5 && bmi <= 23.9)
//	{
//		printf("Normal");
//	}
//	else
//	{
//		printf("Abnormal");
//	}
//}
//int a = 2, b = 3, i = 0,c=1;
//int main()
//{
//	for (i = 0; i <= 5; i++)
//	{
//		c *= a * b;
//	}
//	printf("%d", c);
//}
//#include <stdio.h>
//#include <stdbool.h>  // 用于 bool 类型的头文件
//
//bool is_prime(int num) {
//	if (num <= 1) {
//		return false; 
//	}
//	for (int i = 2; i * i <= num; i++) {
//		if (num % i == 0) {
//			return false; 
//		}
//	}
//	return true; 
//}
//
//int main() {
//	printf("2到100之间的质数有：\n");
//	for (int i = 2; i <= 100; i++) {
//		if (is_prime(i)) {
//			printf("%d ", i); 
//		}
//	}
//	printf("\n");
//	return 0;`
//}
//int main()
//{
//	int i, a[20] = { 1,1 };
//	for (i = 2; i < 20; i++)
//		a[i] = a[i - 2] + a[i - 1];
//	for (i = 0; i < 20; i++)
//		printf("%d\t", a[i]);
//	putchar('\n');
//}
//int main()
//{
//	int i = 0,j=0;
//	int a[4][4]={{1,2,3,4},{5,1,2,3 },{ 5,5,1,2 },{ 5,5,5,1 } };
//	for (i = 0;i < 4;i++)
//	{
//		for (j = 0;j < 4;j++)
//		{
//			printf("%d ", a[i][j]);
//		}
//		printf("\n");
//	}
//
//}
//int main()
//{
//    int i = 1, n = 1,k=0;
//	do {
//		if (i > 2 * (n - 1) + 1)
//			n += 1;
//		for (i = 1; i <= 2 * (n - 1) + 1; i++)
//		{
//			printf("%d,", 2 * (n - 1) + 1);
//			k++;
//		}
//	} while (k <= 40);
//}
//int main()
//{
//	int i = 0, sum = 0, a[20], max = 0, min = 0,x=0,n=0;
//	for (i = 0; i <= 19; i++)
//	{
//		scanf("%d", &a[i]);
//		sum += a[i];
//	}
//	max = min = a[0];
//	for(i=0;i<=19;i++)
//	{
//		if (a[i] > max)
//		{
//			max = a[i];
//			x = i;
//		}
//		if (a[i] ==max)
//		{
//			max = max;
//		}
//		if (a[i] < min)
//		{
//			min = a[i];
//			n = i;
//		}
//		if (a[i]==min)
//		{
//			min = min;
//		}
//	
//	}
//	printf("最大的是:a[%d],%d最小的是:a[%d],%d总和是:%d", x,a[x],n,a[n],sum);
//}
//int main()
//{
//	int i = 0;
//	int a[8] = { 2,3 };
//	for (i = 2; i <= 7; i++)
//	{
//		a[i] = a[i - 1] * a[i - 2];
//	}
//	printf("%d", a[7]);
//}
//int J(int x)
//{
//	if (x<=1)
//	{
//		return 0;
//	}
//	for(int i = 2; i < x; i++)
//	{
//		if (x % i == 0)
//			return 0;
//	}
//	return 1;
//	
//}
//int main()
//{
//	int b = 0, sum = 0;
//	int a[100];
//	for (int n = 2; n <= 100; n++)
//	{
//		if (J(n) == 1)
//		{
//			a[b] = n;
//			b++;
//			sum += 1;
//		}
//	}
//	for (b = 0; b < sum; b++)
//	{
//		printf("a[%d]=%d,",b, a[b]);
//	}
//}
//int prime(int n)
//{
//	int i;
//	for (i = 2; i < n; i++)
//		if (n % i == 0)
//			return 0;
//	    return 1;
//}
//
//	int main()
//	{
//		int i, k = 0, sum = 0;
//		for (i = 2; i <= 500; i++)
//		{
//			if (prime(i) == 1)
//			{
//				printf("%d ",i);
//				k++;
//				sum += i;
//			    if (k % 5 == 0 && k < 40)
//			    {
//				    printf("\n");
//			    }
//           }
//			 if (k == 40)
//				break;
//		}
//		printf("\n500以内的前40个素数之和是: % d\n", sum);
//		return 0;
//	}
//int F(int n)
//{
//	int a = 0;
//	if (n == 0 || n == 1)
//	{
//		a = 1;
//	}
//	if (n == 2)
//	{
//		a = 0;
//	}
//	if (n > 2)
//	{
//		a = F(n - 1) - 3 * F(n - 2) + 2 * F(n - 3);
//	}
//}
//int main()
//{
//	int M = 0, m = 0, i=0, k=0;
//	for (i = 0; i <= 10; i++)
//	{
//		if (M < F(i))
//		{
//			M = F(i);
//		}
//		if (m > F(i))
//		{
//			m = F(i);
//		}
//		if (0 == F(i))
//		{
//			k++;
//		}
//	}
//	printf("F(0)到F(10)中的最大值是:%d，最小值是:%d，等于0的个数为%d", M, m, k);
//}
//int main()
//{
//	int a=2, b, c, d, sum,g,f,sum1;
//	for (a = 2; a <= 1000; a++)
//	{
//		if (a >= 1 && a <= 10)
//		{
//			if (J(a) == 1)
//			{
//				printf("%d\n", a);
//			}
//		}
//		if (a < 10 && a <= 99)
//		{
//			 g= a / 10, f = a % 10;
//			 sum1 = g + a;
//			if (J(g) == 1 && J(f) == 1 && J(sum1) == 1)
//			{
//				printf("%d\n", a);
//			}
//		}
//		if(a>=100&&a<=999)
//		{
//			b = a / 100, c = b / 10 % 10, d = c % 10;
//			sum = b + c + d;
//			if (J(sum) == 1 && J(b) == 1 && J(c) == 1 && J(d) == 1)
//			{
//				printf("%d\n", a);
//			}
//		}
//	}
//}
//int main()
//{
//	int a[20] = { 6,5,8,3,9,6,5,7,5,5,1,7,4,10,5,5,6,8,9,6 };
//	for (int n = 1; n <= 10; n++)
//	{
//		int k = 0;
//		for (int j = 0; j <= 19; j++)
//		{
//			if (a[j] == n)
//			{
//				k += 1;
//			}
//		}
//		printf("第%d位候选人的票数是:%d\n", n, k * n);
//	}
//}
//int f(int x[], int n)
//{
//	int i, m = x[0];
//	for (i = 1; i < n; i++)
//	{
//		if (m < x[i])
//			m = x[i];
//		return m;
//	}
//}
//int main()
//{
//	char a[] = "ab12cd34ef";
//	int i, j;
//	for (i = j = 0; a[i]; i++)
//		if (a[i] >= 'a' && a[i] <= 'z')
//			a[j++] = a[i];
//	a[j] = '\0';
//	printf("%s\n", a);
//}
